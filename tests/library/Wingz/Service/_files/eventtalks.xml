<?xml version="1.0"?>
<response>
    <item>
        <talk_title>Zend PHP 5 Certification Crash Course Part 2</talk_title>
        <speaker>Christian Wenz</speaker>
        <slides_link></slides_link>
        <date_given>1221436800</date_given>
        <event_id>8</event_id>
        <ID>348</ID>
        <talk_desc>Finding good PHP developers is hard enough, but telling whether a developer really knows PHP is even
            harder. The Zend PHP 5 Certification is the industry standard for certified PHP knowledge and acknowledged
            by employers around the world.
            One of the authors of the Zend PHP 5 Certification will guide you through all twelve topic areas of the certification:

            # PHP Basics
            # Functions
            # Arrays
            # OOP
            # Strings and RegEx
            # PHP 4/5 Differences
            # Design and Theory
            # Files, Streams, Networks
            # Web Features
            # XML and Web Services
            # Databases
            # Security

            Countless quiz questions will prepare you for the actual exam (which you will be able to take during the conference on a
            first-come first-served basis), and lots of insider information will increase your odds to pass the test.
            Get ready to get certified!</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Web Scraping with PHP</talk_title>
        <speaker>Matthew Turland</speaker>
        <slides_link></slides_link>
        <date_given>1221436800</date_given>
        <event_id>8</event_id>
        <ID>421</ID>
        <talk_desc>Though web services are becoming increasingly popular for exposing
            access to data, many service-oriented web sites still do not make
            their data available for consumption by automated agents. Alternative
            methods to interact with such sites are rarely documented and often
            not obvious to developers without a good working knowledge of multiple
            technologies that power the web today.

            Web scraping is a collection of practices and techniques to simulate
            the behavior of a normal web site user in order to effectively use the
            web site itself as a web service. This can include both retrieving
            data made available by the site and well as introducing new data into
            the site. This presentation will define web scraping and showcase
            recommended practices and common issues and solutions.</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Zend PHP 5 Certification Crash Course Part 1</talk_title>
        <speaker>Christian Wenz</speaker>
        <slides_link></slides_link>
        <date_given>1221469200</date_given>
        <event_id>8</event_id>
        <ID>387</ID>
        <talk_desc>Finding good PHP developers is hard enough, but telling whether a developer really knows PHP is even
            harder. The Zend PHP 5 Certification is the industry standard for certified PHP knowledge and acknowledged
            by employers around the world.
            One of the authors of the Zend PHP 5 Certification will guide you through all twelve topic areas of the certification:

            # PHP Basics
            # Functions
            # Arrays
            # OOP
            # Strings and RegEx
            # PHP 4/5 Differences
            # Design and Theory
            # Files, Streams, Networks
            # Web Features
            # XML and Web Services
            # Databases
            # Security

            Countless quiz questions will prepare you for the actual exam (which you will be able to take during the conference on a
            first-come first-served basis), and lots of insider information will increase your odds to pass the test.
            Get ready to get certified!</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>PHP Security Crash Course Part 1</talk_title>
        <speaker>Kevin Schroeder</speaker>
        <slides_link></slides_link>
        <date_given>1221469200</date_given>
        <event_id>8</event_id>
        <ID>347</ID>
        <talk_desc>This PHP class presents a comprehensive overview of security and has been designed to equip PHP
            developers with the knowledge they need to build more secure web applications.

            Audience:

            This course is designed for experienced PHP application developers who want to learn or be reminded of security best
            practices. It is also appropriate for new PHP developers who want to learn how to build security into the
            applications they are learning to create.

            Prerequisites:

            Basic knowledge of PHP 5

            Course Objectives:

            Upon completing the course, participants will be prepared to:
            * Incorporate standard, best practice security measures into their PHP applications
            * Identify the most common types of vector attacks and how best to monitor and guard against them.

            Topics Include:


            * What is Security
            * The Defense in Depth Concept
            * Security's Basic Rules
            * Guidelines for Building Secure Web Applications
            * Injection Attacks (SQL, XSS, Command, Remote Code)
            * XSRF Attacks
            * Session Security
            * Secure File Uploads
            * Creating Secure Configurations
            * Password Security
            * Sandboxes &amp; Tarpits
            * Security through Obscurity
            * Security Implications for AJAX
            * Filtering for Charsets
</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Introduction to Object Oriented PHP</talk_title>
        <speaker>Marcus Boerger</speaker>
        <slides_link></slides_link>
        <date_given>1221469200</date_given>
        <event_id>8</event_id>
        <ID>355</ID>
        <talk_desc>PHP has become an extremely powerful web development platform, and since PHP 5 it supports a pretty
            good and capable object model. This allowed the design of high quality frameworks such as the Zend Framework
            or eZ components. But before you can start using them, you might want to learn a bit more about OOP. This
            tutorial is an in-depth introduction to object oriented and pattern based programming using PHP 5. You will
            learn everything necessary to write your own cutting edge components and applications - and of course how to
            use and extend components from other people or companies. You will learn how and when to use objects as well
            as when not to use them. And we won't stop before we have heard about iterators. </talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>PHP Developer Best Practices</talk_title>
        <speaker>Matthew Weier O'Phinney</speaker>
        <slides_link></slides_link>
        <date_given>1221469200</date_given>
        <event_id>8</event_id>
        <ID>368</ID>
        <talk_desc>Working with a team of developers can be either like herding cats or fine-tuning a well-oiled engine,
            and the distinction is often the result of whether or not you have established a set of standard practices
            for your team.

            During this tutorial session, we will cover a number of best practices you can institute in your organization or in your
            personal coding toolbox, including:

            * Testing Strategies
            * Coding Standards
            * Documentation
            * Version Control
            * Deployment Methodologies

            We will discuss the hows and whys of each topic, and strive to cover concrete examples that you can start implementing
            immediately, so that you and your developers can start working more efficiently.</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>SQL Query Tuning: The Legend of Drunken Query Master</talk_title>
        <speaker>Jay Pipes</speaker>
        <slides_link></slides_link>
        <date_given>1221485400</date_given>
        <event_id>8</event_id>
        <ID>372</ID>
        <talk_desc>Once upon a time, a young application developer embarked on a journey to master the art of database
            application tuning. Her path led to studying at the feet of the Drunken Query Master. After years studying
            the arts of join-fu, explain-jitsu and table-kee-do, she returned to her home. Jay Pipes has catalogued the
            lessons she learned from the Drunken Query Master and shares her knowledge with tutorial goers.

            Axioms that Jay will expound upon:

            * Thou shalt not fight with the Database for it is thy Friend
            * The Art of Join-Fu is thy best defense against the Evil Enemy Army of Correlated Subqueries
            * The Art of Join-Fu shall protect thee against Many-To-Many Relationships
            * The Art of Join-Fu shall deliver thee from the Adjacency List Model
            * Table-kee-do shall show thee the Path of (De)Normalization
            * Thou shall understand the Art of Table-kee-do in order to Avoid the Fury of the Query Cache
            * Without the strength of Explain-jitsu, thou shall perish in the Forest of Misunderstanding
            * Thou shall befriend the Index, for it is a Master of Join-fu and will protect thee from the Ravages of the Table
            Scan</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank>5</rank>
        <comment_count>1</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>PHP Security Crash Course Part 2</talk_title>
        <speaker>Kevin Schroeder</speaker>
        <slides_link></slides_link>
        <date_given>1221485400</date_given>
        <event_id>8</event_id>
        <ID>346</ID>
        <talk_desc>This PHP class presents a comprehensive overview of security and has been designed to equip PHP
            developers with the knowledge they need to build more secure web applications.

            Audience:

            This course is designed for experienced PHP application developers who want to learn or be reminded of security best
            practices. It is also appropriate for new PHP developers who want to learn how to build security into the
            applications they are learning to create.

            Prerequisites:

            Basic knowledge of PHP 5

            Course Objectives:

            Upon completing the course, participants will be prepared to:
            * Incorporate standard, best practice security measures into their PHP applications
            * Identify the most common types of vector attacks and how best to monitor and guard against them.

            Topics Include:


            * What is Security
            * The Defense in Depth Concept
            * Security's Basic Rules
            * Guidelines for Building Secure Web Applications
            * Injection Attacks (SQL, XSS, Command, Remote Code)
            * XSRF Attacks
            * Session Security
            * Secure File Uploads
            * Creating Secure Configurations
            * Password Security
            * Sandboxes &amp; Tarpits
            * Security through Obscurity
            * Security Implications for AJAX
            * Filtering for Charsets
</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Quality Assurance in PHP Projects</talk_title>
        <speaker>Sebastian Bergmann</speaker>
        <slides_link></slides_link>
        <date_given>1221485400</date_given>
        <event_id>8</event_id>
        <ID>341</ID>
        <talk_desc>Now that we know how to build applications that "just work", are fast
            and scalable, as well as secure, the next logical step is to implement
            processes and use techniques that help us assure that the software
            works correctly throughout the software&#xE2;&#x20AC;&#x2122;s lifecycle.

            This workshop will introduce the attendees to writing unit
            tests for the backend and system tests for the frontend of a web
            application as well as managing the quality from development to
            deployment and maintainance using tools such as PHPUnit, Selenium RC,
            phpUnderControl, PHP_CodeSniffer, and PHP_Depend.
</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Make 'em Talk !</talk_title>
        <speaker>Joe Stagner</speaker>
        <slides_link></slides_link>
        <date_given>1221523200</date_given>
        <event_id>8</event_id>
        <ID>332</ID>
        <talk_desc>PHP, LAMP, Windows, ASP.NET ?????? Sometimes you can't choose just one.



            In this session, long time PHP developer and Microsoft MisfitGeek with explore the plethora of ways you can make PHP
            and ASP.NET interoperate.



            Need to call .NET objects from PHP, no problem. Wanna have your PHP applications authenticate against the standard
            ASP.NET membership repository, you got it.

            We'll explore these and many many more!</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Customer Case Studies - HarrisData and APi Group  </talk_title>
        <speaker>Lane Nelson</speaker>
        <slides_link></slides_link>
        <date_given>1221523200</date_given>
        <event_id>8</event_id>
        <ID>337</ID>
        <talk_desc>This session will showcase two speakers: HarrisData&#xE2;&#x20AC;&#x2122;s Lane Nelson and
            Zend&#xE2;&#x20AC;&#x2122;s Mike Pavlak. Lane will discuss why HarrisData chose PHP and present examples of
            where they are leveraging PHP. Mike will walk you through why and how APi Group leverage PHP to web-enable
            their ERP system.</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Microsoft's PHP Community Involvement</talk_title>
        <speaker>Tom Hanrahan</speaker>
        <slides_link></slides_link>
        <date_given>1221523200</date_given>
        <event_id>8</event_id>
        <ID>331</ID>
        <talk_desc>The mission for the Microsoft Open Source Software Lab (OSSL) is to ensure the best possible
            interoperability between many open source technologies and Windows. The lab continues to develop
            implementations of PHP-based open source applications on Windows and provide the source code back to the
            community. In his presentation Tom will highlight the projects that the OSSL is working on, the strategy
            behind the OSSL and what the strides that the OSSL has made with the PHP community</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>State &amp; Ajax - How to Maintain Browser and Application State in an Asynchronous World
        </talk_title>
        <speaker>Paul Reinheimer</speaker>
        <slides_link></slides_link>
        <date_given>1221537600</date_given>
        <event_id>8</event_id>
        <ID>352</ID>
        <talk_desc>This talk will examine the two greatest problems in Ajax development (except for that pesky browser
            issue): Exactly what that &#xE2;&#x20AC;&#x153;Asynchronous&#xE2;&#x20AC;&#x9D; word means, what problems it
            creates, and how they can be effectively managed, next the YUI Browser History object will be examined,
            finally handing control of Ajax applications back to the user via their familiar back button.</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Insights from the Experts: How PHP Leaders Are Transforming High-Impact PHP Applications
        </talk_title>
        <speaker></speaker>
        <slides_link></slides_link>
        <date_given>1221553800</date_given>
        <event_id>8</event_id>
        <ID>345</ID>
        <talk_desc>Harold Goldberg, CEO of Zend Technologies, Inc. will review important business and technology trends
            that are shaping how individuals and organizations are increasingly turning to PHP to derive maximum value
            from their efforts. In his keynote, he'll highlight exciting real-world examples and best practices of how
            PHP leaders are re-defining high-impact PHP. </talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Facebook Development with Zend Framework</talk_title>
        <speaker>Brett Harris</speaker>
        <slides_link></slides_link>
        <date_given>1221559200</date_given>
        <event_id>8</event_id>
        <ID>369</ID>
        <talk_desc>Facebook development must be rapid and follow Facebook&#xE2;&#x20AC;&#x2122;s standards. It presents
            different challenges than regular web develoment.

            Web developers are accustomed to norms like sessions, get and post methods, redirects, and standard HTML. We use our own
            database and web servers to host all of our code. We control tightly integrated components for our
            development.

            Getting started in Facebook development has a steep learning curve and the limitations imposed by the Facebook platform
            throw many web norms out the window. Development is awkward and debugging is challenging. Instead of
            spending their time on building applications, developers must spend time working around these limitations
            and debugging Facebook nuances.

            "FBFramework":http://fbframework.googlecode.com/ is a lightweight toolset for Facebook development built on top of Zend Framework. The FBFramework toolset abstracts
            FBML so it behaves like standard HTML, even in development sandboxes. It provides an ActiveRecord model for
            interacting with the application database and Facebook&#xE2;&#x20AC;&#x2122;s FQL tables. It provides
            methods for posting forms and redirecting users so development can follow traditional web workflows.

            This session will explore the challenges and pitfalls of Facebook development and how tools like
            "FBFramework":http://fbframework.googlecode.com/ can simplify and expedite application development.
        </talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Of Haystacks and Needles</talk_title>
        <speaker>Derick Rethans</speaker>
        <slides_link></slides_link>
        <date_given>1221559200</date_given>
        <event_id>8</event_id>
        <ID>364</ID>
        <talk_desc>This session deals with implementing a search engine in your PHP applications. This talk will focus
            on the multitude of different options to implement a search engine into your website. It will cover
            different implementations, such as MySQL full text, a PHP based search engine (Zend Lucene), and an external
            Java based application (Solr) and interfaces to it. It will cover the weaknesses and strengths related to
            installation, availability and performance of all the different implementations that are covered, as well as
            some recommendations as to when to use what kind of implementation.
</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>DB2 Storage Engine for MySQL and Open Source Applications Session</talk_title>
        <speaker>Erwin Earley</speaker>
        <slides_link></slides_link>
        <date_given>1221559200</date_given>
        <event_id>8</event_id>
        <ID>340</ID>
        <talk_desc>MySQL in i5/OS opens up new and interesting methods both for developing customized web-based
            applications that leverage i5/OS resources as well as deploying open community solutions. IBM and MySQL plan
            to deliver DB2 for i5/OS as a certified MySQL storage engine that will enable i5 customers to implement
            online and transactional MySQL applications while storing all data in a single, easy-to-manage DB2 database.
            This presentation will review the current state of the PHP and MySQL offerings for i5/OS including a
            demonstration of the DB2 Storage Engine for MySQL.</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Static and Dynamic Analysis at Ning</talk_title>
        <speaker>David Sklar</speaker>
        <slides_link></slides_link>
        <date_given>1221563700</date_given>
        <event_id>8</event_id>
        <ID>379</ID>
        <talk_desc>Ning's "Your Own Social Network" application is 160,000 lines of PHP
            that powers hundreds of thousands of social networks, each different
            than the others. To keep our platform humming along smoothly, as well
            as to keep our internal development processes sane, we need to know what all that PHP code is doing and how it's
            structured.

            Documentation is nice (and essential) but there's no substitute for relying on the code itself as the canonical source for
            information about, well, the code. That's where static and dynamic analysis come in.

            Static analysis is scanning, parsing, munching, and otherwise processing our PHP source code to answer whatever questions
            we have about it. Who calls this function? What parts of the code do disk write operations? Are there any
            untranslated strings in our localization message catalogs?

            Dynamic analysis gathers information from running code. How many times is a function called? How long does it take? When
            does our PHP code access the filesystem?

            This talk discusses the static and dynamic analysis techniques that we use at Ning to understand and optimize our
            platform, including the PHP tokenizer, regular expressions, the vld and xdebug extensions, and the PHP
            DTrace provider.
</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank>4</rank>
        <comment_count>1</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Modernizing i5 Applications</talk_title>
        <speaker>Jon Paris</speaker>
        <slides_link></slides_link>
        <date_given>1221563700</date_given>
        <event_id>8</event_id>
        <ID>339</ID>
        <talk_desc>PHP offers many opportunities and avenues to leverage existing i5 investments. One such area to
            leverage is the existing i5 applications and programs. This presentation will guide you through examples
            utilizing PHP to both invoke RPG/COBOL/CL programs web-enable 5250 applications.

</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Tiery Eyed</talk_title>
        <speaker>Kevin Schroeder</speaker>
        <slides_link></slides_link>
        <date_given>1221563700</date_given>
        <event_id>8</event_id>
        <ID>362</ID>
        <talk_desc>With applications written in PHP getting larger and more robust there is a need for those
            applications to be able to scale at will. We will look at various methods for scaling those applications
            using several tiered approaches with metrics and items for consideration for each.</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Getting Started with Zend Framework</talk_title>
        <speaker>Matthew Weier O'Phinney</speaker>
        <slides_link></slides_link>
        <date_given>1221563700</date_given>
        <event_id>8</event_id>
        <ID>367</ID>
        <talk_desc>Extending the art &amp; spirit of PHP, Zend Framework is based on simplicity, object-oriented best
            practices, corporate friendly licensing, and a rigorously tested agile codebase. Zend Framework is focused
            on building more secure, reliable, and modern Web 2.0 applications &amp; web services, and consuming widely
            available APIs from leading vendors like Google, Amazon, Yahoo!, Flickr, as well as API providers and
            cataloguers like StrikeIron and ProgrammableWeb.

            In this session, we'll discuss what Zend Framework is and offers, and step through building your first, simple Zend
            Framework MVC application.
</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Leverage ZEND Framework for your next Flex RIA</talk_title>
        <speaker>Wade Arnold</speaker>
        <slides_link></slides_link>
        <date_given>1221563700</date_given>
        <event_id>8</event_id>
        <ID>327</ID>
        <talk_desc>In this session you will learn the basics of setting up an Flex to connect to ZEND_AMF environment.
            We will then walk through a CRUD (create, read, update, delete) example in and Flex 3. You should leave this
            session with confidence in starting to use ZEND_AMF in building your business logic and data tiers for
            future Flex and PHP based applications. Throughout the session we will describe some of the tips and tricks
            for optimizing ZEND_AMF with information on class mapping, Authentication,
            ArrayCollection&#xE2;&#x20AC;&#x161;s, and ZEND_DB, and more which will keep the attention of even the most
            veteran RIA developer.
</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Distribution and Publication With Atom Web Services</talk_title>
        <speaker>Ben Ramsey</speaker>
        <slides_link></slides_link>
        <date_given>1221571800</date_given>
        <event_id>8</event_id>
        <ID>353</ID>
        <talk_desc>As we move toward "Web 3.0," the Web is slowly transforming into a platform upon which massively
            distributed applications run. Rich clients turn personal computers into thin clients, not storing or
            processing any data locally but, rather, connecting to a web service where the data resides. These services
            may target intranets, extranets, or the global Web community, but to work they need a common language. One
            such language is the Atom Publishing Protocol.

            Since its inception as a draft recommendation in 2003, the Atom Syndication Format (RFC 4287) has been used as an
            alternative to Really Simple Syndication (RSS) feeds on blogs throughout the blogosphere. Most have
            understood Atom as just another feed format, but the publication of the Atom Publishing Protocol (RFC 5023)
            opens the door for far more uses of the Atom format as both a means for distribution of data, as well as
            publication.

            Ben Ramsey will introduce the Atom Syndication Format and Atom Publishing Protocol, explaining in depth how these can
            form the foundation of any web service for publication and distribution of data in any environment, from the
            enterprise right down to the small business level. Ramsey will also discuss RESTful design principles as
            they relate to the Atom Publishing Protocol.</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>PECL Picks - Extensions to make your life better</talk_title>
        <speaker>Elizabeth M Smith</speaker>
        <slides_link></slides_link>
        <date_given>1221571800</date_given>
        <event_id>8</event_id>
        <ID>356</ID>
        <talk_desc>PECL is undergoing a transformation, new developers, new tools, and a clearing away of the old cruft.
            Learn the history and idea behind PECL and where the future is leading, and who is involved in the process.

            Then take a walk through PECL and learn about the best and the brightest. PECL extensions fall into three
            rough categories. Library wrappers take a C library and bring the functionality to PHP, general libraries
            add new functionality to PHP through internal C code, and engine level extensions allow you to do cool
            things with PHP.

            Each extension will have a brief overview, who maintains it, the requirements and purpose of the extension, and a quick
            "how to use it". There are 184 extensions in PECL and more on the way, we'll see how many useful ones fit
            into an hour.</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Scaling PHP Applications with Zend Platform</talk_title>
        <speaker>Shahar Evron</speaker>
        <slides_link></slides_link>
        <date_given>1221571800</date_given>
        <event_id>8</event_id>
        <ID>325</ID>
        <talk_desc>This is an overview presentation of Zend Platform and how it can help you scale your PHP application:
            - White-box monitoring with PHP Intelligence
            - Comprehensive Performance Management
            - Smart Parallel Execution with Job Queues
            - Horizontal Scalability through Session Clustering
</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>The Knight Rider Methodology to Software Development</talk_title>
        <speaker>Eli White</speaker>
        <slides_link></slides_link>
        <date_given>1221576300</date_given>
        <event_id>8</event_id>
        <ID>359</ID>
        <talk_desc>As all children of the 80's know, Knight Rider was a story about an otherwise 'normal' law
            enforcement officer who through the use of Technology (KITT) become an unstoppable machine. In this talk
            find out how programmers should be using technology/tools to make themselves better and more productive.
        </talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>PHP Security on i5/OS</talk_title>
        <speaker>Patrick Botz</speaker>
        <slides_link></slides_link>
        <date_given>1221576300</date_given>
        <event_id>8</event_id>
        <ID>338</ID>
        <talk_desc>PHP is rapidly becoming &#xE2;&#x20AC;&#x201C; if not already &#xE2;&#x20AC;&#x201C; the
            defacto-standard for Web application development and deployment. Writing PHP applications that accurately
            enforce your security policies requires knowledge of the general architecture of PHP as well as the i5/OS
            specific components of the architecture. Pat Botz touches on some of the components of the PHP architecture
            and the security considerations for each of them. Additionally, he will review some tips and recommendations
            for writing PHP applications for i5/OS that cannot be used to circumvent your security policies.</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>PHP and the secure application development life-cycle </talk_title>
        <speaker>Robert van der Linde</speaker>
        <slides_link></slides_link>
        <date_given>1221576300</date_given>
        <event_id>8</event_id>
        <ID>370</ID>
        <talk_desc>With security (finally) taking it&#xE2;&#x20AC;&#x2122;s righteous place within the PHP development
            world a new phenomenon is occurring that negates all the hard work and energy devoted to making security a
            hot issue for the developers.

            This phenomenon is more commonly known as &#xE2;&#x20AC;&#x153;tunnel vision&#xE2;&#x20AC;&#x9D;. The amounts of energy
            expended to make developers more aware of best practices when it comes to secure application development is
            wasted when a company doesn&#xE2;&#x20AC;&#x2122;t look beyond the coding phase of software development.

            For secure application development to work a company wide strategy is required to implement security for an application.
            Starting at the requirements phase, throughout coding, testing &amp; implementation and beyond, security is
            as big a factor as QA, usability and what not.

            In this session I plan to address the more common errors made with secure application development and the best
            practices companies can use to make sure they are giving security the attention it so desperately deserves.
        </talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>PDO: PHP Data Objects</talk_title>
        <speaker>Wez Furlong</speaker>
        <slides_link></slides_link>
        <date_given>1221576300</date_given>
        <event_id>8</event_id>
        <ID>344</ID>
        <talk_desc>PHP 5.1 features a new data access layer, PHP Data Objects (PDO), that provides a clear, simple (but
            powerful), unified API for working with all our favorite databases. Features include prepared statements
            with bound parameters (for all databases, even those that don&#xE2;&#x20AC;&#x2122;t natively support them),
            transactions, cursors, LOBs, and flexible error handling. Also examined are the issues of cross-database
            portability and how best to use PDO to avoid some of the pitfalls associated with that topic. Join Furlong
            to learn more about the future of database access in PHP.</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Rickroll To Go With PHP, WURFL, and Other Open Source Tools</talk_title>
        <speaker>Brian DeShong</speaker>
        <slides_link></slides_link>
        <date_given>1221580800</date_given>
        <event_id>8</event_id>
        <ID>363</ID>
        <talk_desc>Want to get that wallpaper on your iPhone or that Rick Astley video on your Nokia N95? In a world
            where mobile content is becoming more prevalent by the day, how can we enhance the experience of gathering
            images, audio and video for consumption on mobile devices?

            Brian will demonstrate how you can leverage the Wireless Universal Resource File (WURFL), PHP, ImageMagick, ffmpeg, and
            other open source tools to optimize content for consumption on mobile devices.</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank>4</rank>
        <comment_count>1</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Top Zend Studio Secrets </talk_title>
        <speaker>Guy Gurfinkel</speaker>
        <slides_link></slides_link>
        <date_given>1221580800</date_given>
        <event_id>8</event_id>
        <ID>376</ID>
        <talk_desc>How much do you really know about the tool you work with every day? How much time could you save by
            correctly using a feature, knowing a handy shortcut, or properly configuring your work environment?

            In this session I will disclose some of Zend Studio&#xE2;&#x20AC;&#x2122;s deepest secrets and reveal some of those
            extremely useful but 'hidden' features of Zend Studio, which could significantly improve your day to day
            work. In just a few minutes you could learn tricks which could save you a significant amount of time and
            effort &#xE2;&#x20AC;&#x201C; every day.
</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>PHP Extension Writing</talk_title>
        <speaker>Sara Golemon</speaker>
        <slides_link></slides_link>
        <date_given>1221580800</date_given>
        <event_id>8</event_id>
        <ID>326</ID>
        <talk_desc>You can't have your language and hack it too, right? Wrong. Take a quick peek under PHP's hood with a
            quick introduction to what makes the elePHPant tick. You'll see PHP's request model in a whole new light,
            and learn to appreciate variables from a whole new angle. By the end of this session, you should be able to
            understand and tinker with PECL's simpler examples, and be on the road to more complex topics. Bring a
            notepad, a sharp pencil, and a basic understanding of C, because this one moves fast.

</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Managing Permissions for Robust Applications</talk_title>
        <speaker>Brandon Savage</speaker>
        <slides_link></slides_link>
        <date_given>1221585300</date_given>
        <event_id>8</event_id>
        <ID>384</ID>
        <talk_desc>Using a number of MySQL tables, this class is a lightweight but powerful way to identify and grant or
            restrict access to users based on their membership in groups or the specific permissions assigned to the
            user. The class is self-contained, allowing it to be deployed with or without certain pre-existing database
            tables. The class will create it's own tables and contains the methods necessary to output the proper CRUD
            tools to manage the application.

            The design of the application is such that it can be added to any existing application with little or no effort.
        </talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>(In)secure Ajax-y Websites with PHP</talk_title>
        <speaker>Christian Wenz</speaker>
        <slides_link></slides_link>
        <date_given>1221585300</date_given>
        <event_id>8</event_id>
        <ID>386</ID>
        <talk_desc>A recent security audit of "Web 2.0" web sites showed that even though the code there is not plagued
            with legacy code from the last century (a common cause for security issues), the chance of exploiting
            insecure code is very high. There are several reasons for that: many APIs and lots of user generated content
            increase the attack surface, and the wide use of JavaScript gives more power to the application -- and to
            the attacker. Old attacks get more dangerous thanks to new twists, and new attacks prove that security is an
            on-going process. This session features many demos, war stories, and of course countermeasures. Better be
            paranoid than offline; in this session you will see how.</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Test Driven Development</talk_title>
        <speaker>Derick Rethans</speaker>
        <slides_link></slides_link>
        <date_given>1221585300</date_given>
        <event_id>8</event_id>
        <ID>375</ID>
        <talk_desc>I will start with introducing what testing is, and which parts of a web
            application can be tested with different methods. I will continue with introducing the test-driven development model - as
            counter model against traditional software development models, followed by a summary of how a development
            team could be organized to produce better quality code. After a very quick introduction into Unit Testing
            and the benefits and problems it brings I will conclude my session with
            a number of case studies of major and smaller software development teams regarding Test-Driven Development and what it
            did to their code quality.</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Elegant Ways of Handling PHP Errors and Exceptions</talk_title>
        <speaker>Eddo Rotman</speaker>
        <slides_link></slides_link>
        <date_given>1221585300</date_given>
        <event_id>8</event_id>
        <ID>380</ID>
        <talk_desc>Murphy was right: things will go wrong in any given situation if you only give them a chance.
            Therefore this session will discuss ways of limiting the risk of things going wrong in your application.
            This session will begin with describing the various error levels there are in PHP and how they can be
            handled elegantly to make a better application. The session will then discuss PHP Exceptions, the
            differences between an exception and an error, and of course the additional possibilities we get from using
            exceptions. The session will demonstrate how exceptions can be used not only for handling errors, but also
            for handling the application's flow, thereby helping us avoid Murphy's Law.</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Magento eCommerce and the Next Generation of PHP Applications</talk_title>
        <speaker>Roy Rubin</speaker>
        <slides_link></slides_link>
        <date_given>1221640200</date_given>
        <event_id>8</event_id>
        <ID>323</ID>
        <talk_desc>Magento eCommerce and the Next Generation of PHP Applications</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Architecting for PHP5 - Why "Runs on PHP5" is not "Written for PHP5"</talk_title>
        <speaker>Elizabeth M Smith</speaker>
        <slides_link></slides_link>
        <date_given>1221644700</date_given>
        <event_id>8</event_id>
        <ID>358</ID>
        <talk_desc>Optimizing your code for PHP5 is better for performance and maintainability reasons, and makes your
            code more flexible and useful. But moving code from the "Runs on PHP5" to the "Written for PHP5" designation
            can be a confusing process, and a rewrite is seldom a good option. However you can "cut out the cruft"
            without throwing out the codebase. And designing a new project means you need to know what PHP5 can do for
            you and think about how to use "built-in tools" from the very beginning.

            You can't get your application up to speed for PHP5 without knowing the cool things that can make your life easier. Most
            books and talks focus on the differences between PHP5 and PHP4 and how to migrate the code, make it run. Few
            focus on the new tools available. This is a rundown of new tools in PHP5 that can help you have better code.
            The highlights are the new object model, SPL tools, Streams and filter enhancements, reflection, datetime,
            filter, json, lots of xml tools, and new array goodies. Not to mention sapi improvements.

            After your toolbox is ready we can move on to architecting a project. Now there are two types of projects, shiny new stuff
            and old legacy code. Although they seem they'd require very different approaches instead the ideas to keep
            in mind are very similiar. Start by deciding what technologies you'll be using and what you'll need to
            support. Take that information and decide what can leverage "built-in" functionality. If it is a new
            project, decisions can be made to use things that were never available on PHP4, for existing projects, you
            may find hundreds of lines of items like xml parsers can be scrapped. Then pay attention to what PHP5
            strengths can be exploited, and what legacy hacks for bugs and limitations in PHP4 can be thrown out the
            window.

            Your finished product is an application that isn't just PHP4 code on life support, but rather a shiny, fast,
            efficient project that is "Written for PHP5"</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Pick Your Protocol: Creating Web Services with Zend Framework</talk_title>
        <speaker>Matthew Turland</speaker>
        <slides_link></slides_link>
        <date_given>1221644700</date_given>
        <event_id>8</event_id>
        <ID>378</ID>
        <talk_desc>As the demand for data portability increases, so too does the incentive for service-oriented web
            sites to offer web services that expose their data for public consumption by other systems. With the advent
            of wide adoption, data access as a service is also becoming an increasingly popular commodity. Under these
            circumstances, it is crucial that developers be prepared to implement web services, and what better way to
            do so than with a open-source framework that has both corporate backing and a contributing community?

            Zend Framework offers readily available components to accelerate the development of web services for the enterprise, both
            for implementation of web services themselves as well as supporting components such as underlying data
            models and authentication services. Through development by a dedicated team at Zend and the community built
            around the project, new components are still being added to increase the number of web service protocols and
            output formats supported by the framework and available to its users.

            Topics to be covered:
            * Definition of web services and their intended applications including pulling and pushing data
            * How MVC and component modularization accelerates web service implementation
            * Common web service protocols including REST, XML-RPC, JSON-RPC, and SOAP and how to choose the best one for the job
            * Zend_Rest_Server
            * Zend_XmlRpc_Server
            * Zend_Soap_Server and Zend_Soap_Wsdl
            * Zend_Json_Server
            * Zend_Auth for HTTP authentication
            * Zend_Json for JSON output</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Creating an Earned Value System for the Department of Defense</talk_title>
        <speaker>Scott Hathaway</speaker>
        <slides_link></slides_link>
        <date_given>1221644700</date_given>
        <event_id>8</event_id>
        <ID>382</ID>
        <talk_desc>How can we use PHP to gain a foothold in the defense industry in America? One way that we have found
            successful is to use a robust reporting and dashboarding system to show data from many different sources all
            in one place in a readable and understandable fashion.

            See how we accomplished this task with a system that the government said was the best system of it's kind in the
            industry. With the right system you can save millions of dollars, help your company be compliant with
            government regulations, and look like a hero, all at the same time!</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>The Power and Beauty of Dojo </talk_title>
        <speaker>Alex Russell</speaker>
        <slides_link></slides_link>
        <date_given>1221649200</date_given>
        <event_id>8</event_id>
        <ID>328</ID>
        <talk_desc>Ajax has the power to make your applications satisfying and beautiful or painful and frustrating.
            This talk discusses the challenges in building satisfying, compelling applications and shows how Dojo
            provides solid improvements to both the developer and end-user experience without removing any of the
            flexibility needed to make the right choices for your users.

            Come learn how Dojo's solid tools, beautiful design, and endless flexibility provide you with better options when
            building solutions for users.
</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>PHP clustering solutions: Zend's View</talk_title>
        <speaker>Alexander Abramovich</speaker>
        <slides_link></slides_link>
        <date_given>1221649200</date_given>
        <event_id>8</event_id>
        <ID>377</ID>
        <talk_desc># IT intro: single node to clustering: the need (fault-tolerance, scalability) and the drawbacks
            (performance, network bottleneck).
            # Clustering types: data sharing and processing-power sharing.
            # Data sharing in Php context: HTTP sessions
            # Data sharing solutions for PHP &#xE2;&#x20AC;&#x201C; comparison of NFS, memcached, Zend Session Clustering, Zend
            Session Clustering HA
            # Quick view on Zend Session Clustering architecture.

            Benefits
            # PHP programmers: better understanding in using proper tools to create a fault-tolerant highly available application
            # WebSite managers (IT): being aware of a clustering solution, so that the data will be almost never lost.
        </talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Digital Identity</talk_title>
        <speaker>Rob Richards</speaker>
        <slides_link></slides_link>
        <date_given>1221649200</date_given>
        <event_id>8</event_id>
        <ID>371</ID>
        <talk_desc>OpenID and Information Cards are two of the most prominent emerging identity technologies. Although
            you might not be ready to start implementing these technologies into your current systems and architecture,
            it is important that you understand the benefits, usage cases and differences between these two technologies
            to prepare for the future. During this presentation we will examine what digital identities are and
            specifically what each of these technologies is. While not going too in-depth on implementation details,
            some tools and libraries will be introduced giving you a head start to the digital identity revolution.
        </talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>State of Ajax</talk_title>
        <speaker>Dion Almaer</speaker>
        <slides_link></slides_link>
        <date_given>1221658200</date_given>
        <event_id>8</event_id>
        <ID>335</ID>
        <talk_desc>The Ajax revolution is complete: Sophisticated JavaScript user interfaces are nearly ubiquitous. Yet,
            the innovations in the Ajax community continue. However, as we take a look back at why Ajax took off, we
            realize how important the user experience it is. As developers we often talk more about the engine than the
            car itself.

            In this talk, Dion and Ben discuss the latest developments, including multithreaded JavaScript technology-powered UIs,
            robust offline storage, choosing the right Ajax/JavaScript technology framework, Ajax outside of the
            browser, and more.
</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Security-Centered Design: Don't Just Plan for Security; Design For It</talk_title>
        <speaker>Chris Shiflett</speaker>
        <slides_link></slides_link>
        <date_given>1221662700</date_given>
        <event_id>8</event_id>
        <ID>374</ID>
        <talk_desc>Anyone who has ever disabled a certain proprietary software firewall because of its constant,
            irritating demands for approval knows that secure development practices are useless if you don't design your
            product so that the security solutions are usable. User perception is as important as reality, and meeting
            user expectations is a fundamental of good security. In this talk, I demonstrate both usable and unusable
            security solutions and give you practical techniques for creating a secure user experience.</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Server-Independent PHP Programming</talk_title>
        <speaker>Eddo Rotman</speaker>
        <slides_link></slides_link>
        <date_given>1221662700</date_given>
        <event_id>8</event_id>
        <ID>381</ID>
        <talk_desc>This session is about best practices and awareness to server specific programming and how to avoid
            it. How to write code that will run on any server with any configuration &#xE2;&#x20AC;&#x201C; things like
            file functions, directories, locale issues, EGPCS; Maybe even design patterns to help do that</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Building RIA with ZF and PHP</talk_title>
        <speaker>John Coggeshall</speaker>
        <slides_link></slides_link>
        <date_given>1221662700</date_given>
        <event_id>8</event_id>
        <ID>357</ID>
        <talk_desc>With all the conversations around Web 2.0 it can be hard to figure out the real dos and do-nots of a
            RIA application. In this talk we&#xE2;&#x20AC;&#x2122;ll talk about the direct experiences
            I&#xE2;&#x20AC;&#x2122;ve had in the creation of RIA using PHP, ZF, and Adobe Flex/AIR

            Specifically the intent behind this talk is to discuss the functional challenges in taking a mission-critical application which
            has been entirely client-side and converting it to the Web and SOA. We&#xE2;&#x20AC;&#x2122;ll discuss the
            challenges we&#xE2;&#x20AC;&#x2122;ve faced in the integration of client-side hardware (barcode scanners,
            etc), challenges in the software (network latency), and challenges in the process. Of course, we will also
            look at a great deal of real code in the implementation!

</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Phar scape</talk_title>
        <speaker>Marcus Boerger</speaker>
        <slides_link></slides_link>
        <date_given>1221662700</date_given>
        <event_id>8</event_id>
        <ID>354</ID>
        <talk_desc>Phar is a brand new PHP specific archive format. It allows compression, signing and much more. On top
            of that, it also enables you to ship and run whole applications without the need of further modifications
            including support for include and require, and even integration with APC. It is available as PHP code as
            well as a PECL extension. Starting with 5.3 it is a default extension and if needed the archives may be
            self-extracting or self-contained. You can use such archives as command line tools, web applications or
            whatever you use PHP for.</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>VIM for (PHP) Programmers</talk_title>
        <speaker>Andrei Zmievski</speaker>
        <slides_link></slides_link>
        <date_given>1221667200</date_given>
        <event_id>8</event_id>
        <ID>385</ID>
        <talk_desc>Are you stuck choosing between Komodo, Zend Studio, PHPEdit, or Eclipse as your next IDE? Did you
            just come to Unix from Windows and wonder how to translate your
            &#xE2;&#x20AC;&#x153;1337&#xE2;&#x20AC;&#x9D; Notepad skills to the new platform?

            Have you pulled out most of your hair struggling to make your current editor do something more complicated than proper
            indentation? Or do you feel that perhaps you use only 5% of VIM&#xE2;&#x20AC;&#x2122;s potential but desire
            to learn the true magic? Then head over to this session and grab a seat, because you
            don&#xE2;&#x20AC;&#x2122;t want to be left standing when everyone else shows up to see what VIM has in store
            for PHP developers. Plus, it&#xE2;&#x20AC;&#x2122;ll help that hair grow back.
</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Zend_Layout and Zend_Form</talk_title>
        <speaker>Matthew Weier O'Phinney</speaker>
        <slides_link></slides_link>
        <date_given>1221667200</date_given>
        <event_id>8</event_id>
        <ID>366</ID>
        <talk_desc>Two of the most anticipated features for the 1.5.0 release of Zend Framework were Zend_Layout and
            Zend_Form. Zend_Layout provides a standard mechanism for implementing Two Step Views in ZF, and, when
            coupled with a number of new view helpers, allows for truly complex and rich view layers. Zend_Form provides
            support for validating, filtering, and rendering forms and form elements, and provides a flexible plugin
            system to accomplish these goals.

            In this session, we will cover the basics required to master these two components, allowing you to begin building rich
            UI layers for your dynamic, Zend Framework based websites.</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>PHP and AJAX Made Easier with Zend</talk_title>
        <speaker>Roy Ganor</speaker>
        <slides_link></slides_link>
        <date_given>1221667200</date_given>
        <event_id>8</event_id>
        <ID>336</ID>
        <talk_desc>It's about to get a whole lot easier for PHP and AJAX developers to develop Rich Internet
            Applications (RIA) under the Zend Studio for Eclipse environment. In this session, you will learn how to
            create a simple RIA application utilizing Zend Framework and Dojo. You will be introduced to the tooling and
            the resources available for RIA developers. Along with the work on the sample application, the basic
            concepts of the development environment, we will show how to debug your client-server communication and how
            HTML and JavaScript introspection is enabled by an embedded Firefox web browser.



            This session is suited for RIA beginners and experts, no previous knowledge of RIA is required. However, you should have
            basic knowledge of PHP and a bit of JavaScript and CSS. After this session, you will have a basic RIA
            application up and running. 

</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Quickstart to Continious Integration</talk_title>
        <speaker>Sebastian Bergmann</speaker>
        <slides_link></slides_link>
        <date_given>1221667200</date_given>
        <event_id>8</event_id>
        <ID>389</ID>
        <talk_desc>Continuous Integration is a software development practice where members of a team integrate their
            work frequently, usually each person integrates at least daily - leading to multiple integrations per day.
            Each integration is verified by an automated test to detect integration errors as quickly as possible. Many
            teams find that this approach leads to significantly reduced integration problems and allows a team to
            develop cohesive software more rapidly.

            This session, held by the creator of PHPUnit, will provide the audience with a quick overview of Continuous Integration
            summarizing the technique and its application in PHP-based projects using CruiseControl and phpUnderControl.
        </talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>High Performance PHP &amp; MySQL scaling techniques</talk_title>
        <speaker>Eli White</speaker>
        <slides_link></slides_link>
        <date_given>1221671700</date_given>
        <event_id>8</event_id>
        <ID>360</ID>
        <talk_desc> This talk will discuss issues and solutions when attempting to scale
            PHP and MySQL to high volume websites (such as digg.com). It will
            discuss some of the problems at hand, and go into (at a high level) some
            of the solutions, such as using memcache, DB partitioning, etc. As well as how to handle these solutions within PHP.
        </talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>PHP on Windows: The Undiscovered Country</talk_title>
        <speaker>Garrett Serack</speaker>
        <slides_link></slides_link>
        <date_given>1221671700</date_given>
        <event_id>8</event_id>
        <ID>333</ID>
        <talk_desc>For the last decade, PHP has been available for Windows. And although developers often chose the
            Windows platform during their application development, when it comes to deployment far fewer apps found
            their way onto the platform. Come join Garrett Serack from Microsoft's Open Source Software Lab to discover
            just how far community cooperation has pushed PHP to new heights on the Windows platform. See the new
            features and benefits you'll find there, and witness how PHP and Open Source is transforming the Windows
            ecosystem.
</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>PHP in the Enterprise</talk_title>
        <speaker>Ivo Jansch</speaker>
        <slides_link></slides_link>
        <date_given>1221671700</date_given>
        <event_id>8</event_id>
        <ID>390</ID>
        <talk_desc>PHP has come a long way. What started as a tool to help Rasmus track his online resume, is now used
            by millions of websites and applications worldwide. Many of these are becoming business critical. With the
            growth of PHP, there is also a demand for mature PHP development. In this talk, Ivo discusses ways to
            improve your development process to create applications that are more robust, have higher quality and are
            easier to maintain.

            By comparing the building of a critical application to building a skyscraper, and PHP to bricks, you can see that
            there's more than just stacking the bricks in order to build a skyscraper. The talk covers all relevant
            parts of the development life-cycle and helps developers and development managers to take their development
            efforts to the next level.</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Zend_Tool: Rapid Application Development with Zend Framework</talk_title>
        <speaker>Ralph Schindler</speaker>
        <slides_link></slides_link>
        <date_given>1221671700</date_given>
        <event_id>8</event_id>
        <ID>351</ID>
        <talk_desc>"Wash, Rinse, Repeat." If that sounds like the beginning of every Zend Framework project you start,
            it's time familiarize yourself with Zend_Tool. Zend_Tool is not only a tooling framework for ZF, but one of
            the most effective weapons a developer can have in his or her arsenal. It exists solely to help rid
            developers of repetitive tasks that delay all the fun stuff in their new projects. This session will cover
            all aspects of Zend_Tool: from basic usage of the command line interface (CLI), to its out-of-the-box
            capabilities, and finishing with what it takes to extend Zend_Tool for your next project or component. We
            will also briefly go over how Zend_Tool can bring the ZF experience to your favorite IDE/development
            environment.</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Meet the Zend Teams</talk_title>
        <speaker></speaker>
        <slides_link></slides_link>
        <date_given>1221678000</date_given>
        <event_id>8</event_id>
        <ID>343</ID>
        <talk_desc>Meet members of Zend's development teams and ask them questions. This panel discussion will be lead
            by Zend's CTO, Andi Gutmans. The Zenders in attendance will include:
            - Eddo Rotman
            - Roy Ganor
            - Guy Gurfinkel
            - Sasha Abramovich
            - Stas Malyshev
            - Matthew O'Phinney
            - Wil Sinclair

</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Zero9 - Architecting &amp; Building a Multi-Country Mobile User Community</talk_title>
        <speaker>Andrea Guzzon</speaker>
        <slides_link></slides_link>
        <date_given>1221726600</date_given>
        <event_id>8</event_id>
        <ID>322</ID>
        <talk_desc>In this talk we will present a new e-community platform developed for the Italian company Zero9, by
            Zend Global Services in Rome. Zero9 is a global leading content and services provider for the Web and for
            the B2B and B2C Mobile market. Zero9 first introduced in Italy an integrated platform for planning and
            selling Mobile Advertising and is now in six countries and has over 3 million users. The previous
            e-community platform was developed by the customer with PHP 4 and Java, this legacy platform presented
            problems in terms of management, maintainability and performance. The customer asked Zend to help build and
            develop a robust new platform using PHP 5 as the core middleware component. The interesting aspect of this
            is that PHP is not being used for the web front-end, but as a service layer all using XML-based web
            services. Come learn how we used Zend Framework and Zend Platform to deliver this solution to Zero9 and the
            resulting business success they've achieved with it.</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Building Desktop RIAs with PHP, HTML and Javascript in AIR</talk_title>
        <speaker>Edward Finkler</speaker>
        <slides_link></slides_link>
        <date_given>1221726600</date_given>
        <event_id>8</event_id>
        <ID>383</ID>
        <talk_desc>Adobe AIR opens up interesting possibilities for web developers, allowing them to leverage their
            existing skills to develop desktop applications. Aimed at current PHP developers, this talk will focus on
            common web application technologies - PHP, HTML, Javascript - and explore how to utilize them to create
            desktop "Rich Internet Applications." Topics will include:

            * How Javascript differs from PHP
            * Getting PHP and Javascript talking to one another via JSON
            * Security considerations for both the client and server sides
            * Various hacks and tricks from an experienced RIA developer</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Make your PHP Application Software-as-a-Service (SaaS) Ready with the Parallels Open Platform
        </talk_title>
        <speaker>Jack Zubarev</speaker>
        <slides_link></slides_link>
        <date_given>1221726600</date_given>
        <event_id>8</event_id>
        <ID>330</ID>
        <talk_desc>Vendor ShowcaseExtend the market reach of your PHP application while creating additional revenue for
            your Company! Parallels a worldwide leader in virtualization and automation software that optimizes
            computing across all major hardware, operating systems, and virtualization platforms has the ideal platform
            for your PHP Application. Parallels Open Platform forms the basis for third party application SaaS delivery
            through a channel of 10,000 service providers who serve more than 10 million end-customers in 125 countries.
            This session will provide an overview of the SaaS opportunity, describe the Application Packaging Standard
            (APS) and show how your application can be easily integrated into the Parallels Open Platform. 
</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Scaling Mozilla's websites with PHP</talk_title>
        <speaker>Laura Thomson</speaker>
        <slides_link></slides_link>
        <date_given>1221726600</date_given>
        <event_id>8</event_id>
        <ID>350</ID>
        <talk_desc>Every instance of Firefox calls home every day. mozilla.com, addons.mozilla.org, and
            support.mozilla.com, along with many other Mozilla sites, serve hundreds of millions of pages each day. All
            of Mozilla's websites are built with PHP, and frequently with third party Open Source PHP projects like
            CakePHP, Drupal, and TikiWiki.

            In this session I'll discuss some of the challenges we have faced, including:
            * Our infrastructure and scaling and performance analysis approach
            * The challenges and rewards of basing our websites on existing Open Source projects
            * Localization
            * Security issues

            Come along for a peek inside our engine room.</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>What's new in PHP 5.3</talk_title>
        <speaker>Andi Gutmans</speaker>
        <slides_link></slides_link>
        <date_given>1221731100</date_given>
        <event_id>8</event_id>
        <ID>342</ID>
        <talk_desc>What's new in PHP 5.3</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Taking it all offline with SQL Anywhere </talk_title>
        <speaker>Eric Farrar</speaker>
        <slides_link></slides_link>
        <date_given>1221731100</date_given>
        <event_id>8</event_id>
        <ID>334</ID>
        <talk_desc>Enterprise applications developed using PHP are getting better every day. They are continually
            becoming more secure, better performing, and more scalable. However, all of these applications can only be
            used when a network connection is available. This requirement prevents PHP applications from working in an
            occasionally-connected model. New browser plugin technologies such as Gears allow applications to run
            offline, but require the entire application be written in JavaScript (allowing little-or-no PHP code reuse).
            This talk will examine how SQL Anywhere can help solve this problem, and take your current PHP application
            offline by locally hosting, managing, serving, and synchronizing your PHP application and data with your
            current database. 
</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Solving the C20K problem: Raising the bar in PHP Performance and Scalability</talk_title>
        <speaker>Luxi Chidambaran</speaker>
        <slides_link></slides_link>
        <date_given>1221731100</date_given>
        <event_id>8</event_id>
        <ID>349</ID>
        <talk_desc>How do you configure and tune your PHP applications to handle 20,000
            or more concurrent connections to your database on your desktop? This technical session describes how to implement and
            tune PHP's OCI8 extension with Oracle's Database Resident Connection Pool (DRCP).
            After a brief overview of Oracle's DRCP architecture, we will describe how to configure it, what to plan for during
            implementation, and how to tune your PHP application.
            Through a real life example, we give tuning and scaling strategies for
            connection management, show tuning of SQL statements, and explain
            performance monitoring tools and techniques.



</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>End-to-end web testing with Selenium</talk_title>
        <speaker>Stefan Priebsch</speaker>
        <slides_link></slides_link>
        <date_given>1221731100</date_given>
        <event_id>8</event_id>
        <ID>361</ID>
        <talk_desc>It has long been said that web sites and web applications are notoriusly hard to test. Not any more.
            This session will introduce you to the free testing tool Selenium. With Selenium, you can automate
            browser-based tests. In extensive live demonstrations, you will learn how to create tests for plain web
            pages and AJAX appplications with Selenium IDE.

            We will also explore how to integrate Selenium with PHPUnit to fully automate system tests, and run them on a
            continuous integration server. Bringing virtual machines into the game, you can set up a large test lab
            without buying any additional hardware.</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>How Shaklee used PHP &amp; Zend to build a featherlight front-end that just won't go down
        </talk_title>
        <speaker>Chris Jones</speaker>
        <slides_link></slides_link>
        <date_given>1221735600</date_given>
        <event_id>8</event_id>
        <ID>329</ID>
        <talk_desc>Technologists for one of world's most popular TV talk shows say, "We take down everyone's website!"
            How Shaklee used PHP &amp; Zend to build a featherlight front-end that just won't go down

            In this talk, we'll discuss the immense loads that face a web site when their web property makes an appearance on a
            nationally syndicated television show. Their producers told us, "We take down everyone's web site that
            appears on this show." We are talking 8,000 requests per second, loads of approximately 60 MBits/sec for
            simply the text-based portions (HTML over HTTP) on our site, and over 200 MBits/sec for our static content
            (pics, graphics, etc.)

            Come learn how we used Zend Platform's performance and management features, in combination with a featherlight front-end,
            to manage the massive numbers you see above. We'll discuss things like batch transaction processing (job
            queuing), using cookies to store the entire shopping cart, and other tips to offload as much as possible
            from the server-side. We'll also discuss how this kind of architecture simply isn't done with Java toolkits
            or web servers available out there. PHP with Zend tools enabled us to massively scale our performance and
            more importantly, manage our PHP infrastructure, in order to deal with these extraordinary loads and the
            code running under them in an orderly way.

            With Zend we've handled the website load through three appearances on this national TV show and five airings, including
            reruns. Come hear how we did it. </talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>I need more servers! what do I do? (Scaling a php application)</talk_title>
        <speaker>Maurice Kherlakian</speaker>
        <slides_link></slides_link>
        <date_given>1221735600</date_given>
        <event_id>8</event_id>
        <ID>365</ID>
        <talk_desc>1. Introduction: Help! I need more servers! What do I do?
            Building a scalable PHP application can be a challenging task: When we mention scalability, we usually refer to two factors:
            performance and high availability. This presentation covers both.
            When it comes to scaling, it is extremely important to mention that there is no right or wrong technique. All the various
            scaling techniques and practices have advantages and disadvantages, and should be chosen based on
            one&#xE2;&#x20AC;&#x2122;s particular needs and situation.
            I have built and ran for over a year a successful file hosting website (230 Alexa rank) that is programmed in PHP.
            This website experiences 300,000 visitors per day, and at peak times, has a throughput of 3Gbps. (that is 27
            Tb of data transferred daily). Engineering this system required thinking outside of the box, and we applied
            several original scaling techniques to reduce operaqting and hardware cost.

            2. High throughput vs high availability

            * Discuss the difference between high throughput (supporting lots of traffic, performance) vs high availability
            (application being fault tolerant)

            3. Load balancers: How do they work?

            * Hardware vs software load balancers (Ultramonkey solution)
            * Session persistence across servers; sticky sessions, Zend platform, Sharedance server&#xE2;&#x20AC;&#xA6;

            4. Application database infrastructure

            * Short presentation of different MySQL scalability options: Replication, Circular replication, DRBD, MySQL cluster
            * How does MySQL scalability affect your code: (Replication: splitting reads and writes, Circular replication:
            avoiding collisions and data inconsistency&#xE2;&#x20AC;&#xA6;)
            * Shards

            What are the advantages of shards, and how does it affect the development process? Shards are a database architecture
            technique consisting in splitting data across database servers hosting the same table structure. It usually
            implies the implementation of hashing algorithms that determine which servers the data is created on and
            retrieved from.

            5. PHP Code design considerations

            * Zend framework: How can it help in scaling
            * How is the application split? Is each part of the application hosted on one (or a cluster) of servers, or is the
            application one monolithic block stored on one cluster?
            * Modular design, how to code your application to make it easy to distribute the load of your application across
            different clusters. The idea behind this kind of segmentation is that different parts of your application
            may require different kinds of resources. Some parts may need high amounts of RAM, while others may require
            high I/O. If the segmentation of the application is done correctly, it could end up saving hardware costs on
            the long run.
            * The use of shared storage, web services and different communication protocols to allow different parts of your
            application to communicate with one another

            6. Best practices when building an application for scalability

            * Plan, plan and plan
            * Study different components, make sure they can interact wit hone another

            7. Conclusion
 
</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Digging Through the Guts of Enterprise PHP: A Case Study</talk_title>
        <speaker>Shawn Lauriat</speaker>
        <slides_link></slides_link>
        <date_given>1221735600</date_given>
        <event_id>8</event_id>
        <ID>388</ID>
        <talk_desc>IBM Rational Build Forge started out as a small start-up company offering process automation
            software, most commonly used for automating software builds. As its customer base grew, its user interface
            made the change from a relatively simple PHP 4 web application to the Ajax-driven PHP 5 web application used
            today. During the migration to PHP 5 and a redesigned interface, IBM acquired the Austin-based company and
            introduced its own requirements and software standards.

            In the journey to internationalization, scalability, performance tuning, and platform/database independence, the user
            interface used more and more of the language features and built-in functionality offered by PHP 5. The web
            application contains real world examples of how to use design patterns, class inheritance, interfaces, and
            Iterators in order to accelerate development while keeping functionality as reliable, maintainable, and fast
            as possible. This talk will explore how IBM Rational Build Forge uses PHP, looking at specific uses in the
            product today and coming in version 7.1.

</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
    <item>
        <talk_title>Closing Keynote</talk_title>
        <speaker>Mark de Visser</speaker>
        <slides_link></slides_link>
        <date_given>1221740100</date_given>
        <event_id>8</event_id>
        <ID>324</ID>
        <talk_desc>At this session we&#xE2;&#x20AC;&#x2122;ll review the week, acknowledge the contributors, announce
            the prize winners, talk about the plans for next year, and introduce you to someone who uses PHP to make a
            difference in the world. David Neff will present how the American Cancer Society uses PHP and Zend Framework
            for a new kind of social application called SharingHope.tv. He will show how this application changes the
            lives of patients and their families and how you can participate in the &#xE2;&#x20AC;&#x153;Code Against
            Cancer&#xE2;&#x20AC;&#x9D; initiative.</talk_desc>
        <event_tz_cont></event_tz_cont>
        <event_tz_place></event_tz_place>
        <event_start>1221436800</event_start>
        <event_end>1221782399</event_end>
        <lang>us</lang>
        <rank></rank>
        <comment_count>0</comment_count>
        <tcid>Talk</tcid>
        <tracks></tracks>
    </item>
</response>